name: Deploy to Amazon ECS

on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest # 실행될 인스턴스 OS와 버전

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Decode application.yml
      - name: Decode application.yml
        run: |
          mkdir -p src/main/resources
          echo ${{ secrets.YML }} | base64 --decode > src/main/resources/application.yml
          echo "application.yml created successfully."
          echo "===== List files in src/main/resources ====="
          ls -l src/main/resources

      # Step 3: Check if application.yml exists (debug step)
      - name: Verify application.yml
        run: |
          if [ -f src/main/resources/application.yml ]; then
            echo "application.yml exists:"
            cat src/main/resources/application.yml
          else
            echo "ERROR: application.yml does not exist!"
            exit 1
          fi

      # Step 4: Copy application.yml to EC2
      - name: Copy application.yml to EC2
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          source: "./src/main/resources/application.yml"
          target: "/home/ec2-user/cctv/cctv/src/main/resources/application.yml"

      # Step 5: SSH to EC2 and verify application.yml
      - name: SSH to EC2 and verify application.yml
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          script: |
            if [ -f /home/ec2-user/cctv/cctv/src/main/resources/application.yml ]; then
              echo "application.yml exists on EC2:"
              cat /home/ec2-user/cctv/cctv/src/main/resources/application.yml
            else
              echo "ERROR: application.yml does not exist on EC2!"
              exit 1
            fi

      # Step 6: Build application
      - name: Build application on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          script: |
            cd /home/ec2-user/cctv/cctv
            git pull origin master
            ./gradlew clean build
